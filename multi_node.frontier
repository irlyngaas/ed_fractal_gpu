#!/bin/bash
#SBATCH -A BIF146
#SBATCH -J fractal
#SBATCH -t 01:00:00
#SBATCH -p batch
#SBATCH -N 1

set +x
source /lustre/orion/proj-shared/stf006/irl1/conda/etc/profile.d/conda.sh
conda activate /lustre/orion/bif146/proj-shared/irl1/FRACTAL/fractal-env

#module load rocm/5.7.0
module load rocm/5.3.0




export PYTHONUNBUFFERED=1
export PYTHONWARNINGS="ignore"

############# Render to local SSD
# export SSD=/local/${JOB_ID}.1.gpu
# export LOCALDIR=${SSD}
export LOCALDIR=/lustre/orion/bif146/proj-shared/irl1/FRACTAL/ed_fractal_gpu
export RENDER_HWD=egl
export DATASET=${LOCALDIR}/fdb1k_${RENDER_HWD}

#cd render_engines/fdb
echo "Start untar to local ..."

time tar -xf csv/data1k_fromPython.tar -C ${LOCALDIR}

echo "Start REDNERING to local ..."
# For GPU
#mpirun --bind-to socket -machinefile $SGE_JOB_HOSTLIST --use-hwthread-cpus -npernode 80 -np 320 python mpi_createFDB_gpu.py --image_res 362 --ngpus-pernode 4 --save_root /beeond/fdb1k --load_root /beeond/data1k_fromPython/csv_rate0.2_category1000
srun -N 1 --gpus-per-node=8 python mpi_createFDB_gpu.py --image_res 362 --ngpus-pernode 8 --save_root /lustre/orion/bif146/proj-shared/irl1/FRACTAL/ed_fractal_gpu/fdb1k --load_root /lustre/orion/bif146/proj-shared/irl1/FRACTAL/ed_fractal_gpu/data1k_fromPython/csv_rate0.2_category1000 --backend glfw

##### Debug local
echo "Content of the local SSD"
readlink -f ${LOCALDIR}
ls ${LOCALDIR}

echo "Classes on FractalDB"
ls ${LOCALDIR}/fdb1k_egl 

echo "Total number of images:"
find ${LOCALDIR}/fdb1k_egl -type f -print |wc -l
